AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  testHello

  Sample SAM Template for testHello

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    MemorySize: 2240

Resources:
  extractFrameFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: extractFrame/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonS3FullAccess
        - arn:aws:iam::952659794937:policy/ugc-role
      Events:
        extractFrame:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /extractFrame
            Method: get
        S3Event:
          Type: S3
          Properties:
            Bucket:
              Ref: ugc-source-bucket-lwxn     # This must be the name of an S3 bucket declared in the same template file
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix      # or "suffix"
                    Value: .mp4
      Layers:
        - arn:aws:lambda:ap-northeast-1:952659794937:layer:ffmpeg:1

  ugc-source-bucket-lwxn:
    Type: AWS::S3::Bucket


#  libs:
#    Type: AWS::Serverless::LayerVersion
#    Properties:
#      LayerName: arn:aws:lambda:ap-northeast-1:952659794937:layer:ffmpeg:1
#      Description: Dependencies for the decode-python sample app.
#      ContentUri: package/.
#      CompatibleRuntimes:
#        - python3.8

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  testextractFrameApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/extractFrame/"
  extractFrameFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt extractFrameFunction.Arn
  extractFrameFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt extractFrameFunctionRole.Arn
